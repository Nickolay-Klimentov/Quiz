const fs = require('fs');
const readlineSync = require('readline-sync');

class Question {
  constructor([question, answer]) {
    this.question = question;
    this.answer = answer;
  }
}
function convrtStrToOBj() {
  const arrOfRows = fs.readdirSync(`${__dirname}/topics`, 'utf-8').map((fileName) => fs.readFileSync(`${__dirname}/topics/${fileName}`, 'utf-8'));
  return arrOfRows.map((row) => splitter(row));
}
function splitter(str) {
  return str.split('\n').map((row) => new Question(row.split('|')));
}
function greeting() {
  console.log('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Quiz!');
  const userName = readlineSync.question('–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? ');
  console.log(`–ü—Ä–∏–≤–µ—Ç, ${userName}!`);
  console.log('–í—ã–±–µ—Ä–∏ —Ç–µ–º—É: \n1. –ß–µ–º–ø–∏–æ–Ω–∞—Ç –ú–∏—Ä–∞ –ø–æ —Ñ—É—Ç–±–æ–ª—É.‚öΩÔ∏è');
  console.log('2. –†–∞–Ω–¥–æ–º–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã.üé≤');
  console.log('3. –ó–∞–≥–∞–¥–∫–∏ –¥–ª—è –¥–µ—Ç–µ–π.‚ÅâÔ∏è');
  const indexTopic = readlineSync.question('->');

  const questionArr = convrtStrToOBj()[indexTopic - 1];
  // eslint-disable-next-line no-restricted-syntax
  let scoreCount = 0;
  // eslint-disable-next-line no-restricted-syntax
  for (const question of questionArr) {
    console.log(`–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å: ${question.question}`);
    const inputAnswer = readlineSync.question('–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç: ');
    if (inputAnswer.toLowerCase() !== question.answer) {
      console.log(`'${inputAnswer}': –Ω–µ –≤–µ—Ä–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: '${question.answer}'.`);
    } else {
      scoreCount += 1;
      console.log('–í–µ—Ä–Ω–æ!');
    }
  }
  console.log(`–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, ${userName}! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${scoreCount} –∏–∑ 5!`);
}
greeting();
